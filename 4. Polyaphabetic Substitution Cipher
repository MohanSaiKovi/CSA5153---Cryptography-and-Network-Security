#include <stdio.h>
#include <string.h>
#include <ctype.h>

void to_uppercase(char *str) {
    for (int i = 0; str[i] != '\0'; i++) {
        str[i] = toupper(str[i]);
    }
}

void vigenere_encrypt(char *plaintext, char *key, char *ciphertext) {
    int key_len = strlen(key);
    int text_len = strlen(plaintext);

    for (int i = 0, j = 0; i < text_len; i++) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            ciphertext[i] = (plaintext[i] - base + (toupper(key[j]) - 'A')) % 26 + base;
            j = (j + 1) % key_len;
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[text_len] = '\0';
}

void vigenere_decrypt(char *ciphertext, char *key, char *plaintext) {
    int key_len = strlen(key);
    int text_len = strlen(ciphertext);

    for (int i = 0, j = 0; i < text_len; i++) {
        if (isalpha(ciphertext[i])) {
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            plaintext[i] = (ciphertext[i] - base - (toupper(key[j]) - 'A') + 26) % 26 + base;
            j = (j + 1) % key_len;
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[text_len] = '\0';
}

int main() {
    char plaintext[100], ciphertext[100], key[100];
    int choice;

    printf("Enter the key: ");
    fgets(key, sizeof(key), stdin);
    key[strcspn(key, "\n")] = '\0';
    to_uppercase(key);

    printf("Enter the text: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';

    printf("Choose operation (1-Encrypt, 2-Decrypt): ");
    scanf("%d", &choice);

    if (choice == 1) {
        vigenere_encrypt(plaintext, key, ciphertext);
        printf("Encrypted text: %s\n", ciphertext);
    } else if (choice == 2) {
        vigenere_decrypt(plaintext, key, ciphertext);
        printf("Decrypted text: %s\n", ciphertext);
    } else {
        printf("Invalid choice.\n");
        return 1;
    }

    return 0;
}
