#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>

void generate_random_key(char *key) {
    char alphabet[27] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int n = 26;

    for (int i = 0; i < n; i++) {
        int j = rand() % (n - i) + i;
        char temp = alphabet[i];
        alphabet[i] = alphabet[j];
        alphabet[j] = temp;
    }
    
    strcpy(key, alphabet);
}

void encrypt(char *plaintext, char *key, char *ciphertext) {
    for (int i = 0; i < strlen(plaintext); i++) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            ciphertext[i] = isupper(plaintext[i]) ? toupper(key[plaintext[i] - base]) : tolower(key[plaintext[i] - base]);
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[strlen(plaintext)] = '\0';
}

void decrypt(char *ciphertext, char *key, char *plaintext) {
    char reverse_key[26];
    for (int i = 0; i < 26; i++) {
        reverse_key[toupper(key[i]) - 'A'] = 'A' + i;
        reverse_key[tolower(key[i]) - 'a'] = 'a' + i;
    }

    for (int i = 0; i < strlen(ciphertext); i++) {
        if (isalpha(ciphertext[i])) {
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            plaintext[i] = reverse_key[ciphertext[i] - base];
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[strlen(ciphertext)] = '\0';
}

int main() {
    char plaintext[100], ciphertext[100], key[27];
    int choice;

    srand(time(NULL));
    generate_random_key(key);

    printf("Generated Key: %s\n", key);

    printf("Enter the text: ");
    getchar();
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';

    printf("Choose operation (1-Encrypt, 2-Decrypt): ");
    scanf("%d", &choice);

    if (choice == 1) {
        encrypt(plaintext, key, ciphertext);
        printf("Encrypted text: %s\n", ciphertext);
    } else if (choice == 2) {
        decrypt(plaintext, key, ciphertext);
        printf("Decrypted text: %s\n", ciphertext);
    } else {
        printf("Invalid choice.\n");
        return 1;
    }

    return 0;
}
